<<<<<<< HEAD
Docker is a computer program that performs operating-system-level virtualization, also known as "containerization'.

Docker is a popular tool to make it easier to build, deploy and run applications using containers. Containers allow us to package all the things that our application needs like such as libraries and other dependecies and ship it all as a single package. In this way, our application can be run on any machine and have same behavior.

Docker is not a Virtual Machine (VM).

A Docker container, unlike a virtual machine, does not require or include a seperate operating system. Instead, it relies on the kernel's functionality and uses resource isolation for CPU and memory, and seperate namespaces to isolate the application's view of the operating system.

Docker hub is basically :

A cloud based registry service which allows you to link to code repositories, build your images and test them, stores manually pushed images, and links to Docker Cloud so you can deploy images to your hosts. It provides a centralized resource for container image discovery, distribution and change management, user and team collaboration, and workflow automation throughout the development pipeline.


After pulling the Docker image, it will run the container and will show a Hello from Docker! message with some other information.



=======
Docker is one implementation of container based visualization technologies.

pre-Visualization world

App --> Bins/libs --> Host os --> run app -->

Huge host , resources wasted, deployment is often slow, paying for migrating our applications to servers from different Bendre.

Hypervisor- based visualization.

Cost effective
Easy to scale

Kernel resource duplication.

Application Portability issue

Container based Virtualization

we have our server, install os systems


Creating and Running Containers

We just need to know that it is a "Hello World" web application in Flask which will run on localhost from inside a container.

It will import the Flask package, create a Flask app, define a route and run the application in debug mode on local host.

So, let's start creating our Dockerfile. To do that, just create a file named Dockerfile in the same directory of the python file.

As 
>>>>>>> bd136b964dea160a501c2b4096b3c5be68b8e906
